// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc3532.PiranhaEnergy.subsystems;
import org.usfirst.frc3532.PiranhaEnergy.RobotMap;
import org.usfirst.frc3532.PiranhaEnergy.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class Canon extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController pushDisk = RobotMap.canonPushDisk;
    SpeedController loadDisk = RobotMap.canonLoadDisk;
    SpeedController motorFront = RobotMap.canonMotorFront;
    SpeedController motorBack = RobotMap.canonMotorBack;
    SpeedController canonHeightMotor2 = RobotMap.canonCanonHeightMotor2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    double speed = 0.5;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void spinWheels() {
        motorFront.set(speed);
        motorBack.set(speed);
    }
    public void stopWheels() {
        motorFront.set(0.0);
        motorBack.set(0.0);
    }
    public void increaseWheelSpeed() {
        speed += 0.1;
        if( speed > 1.0 )
        {
            speed = 1.0;
        }
        if( motorFront.get() != 0.0 )
        {
            motorFront.set(speed);
            motorBack.set(speed);
        }
    }
    
    public void decreaseWheelSpeed() {
        speed -= 0.1;
        if( speed < 0.0 )
        {
            speed = 0.0;
        }
        if( motorFront.get() != 0.0 )
        {
            motorFront.set(speed);
            motorBack.set(speed);
        }
   }
    public void pushLaunchArm(double speed) {
        pushDisk.set(speed); 
    }
    public void stopLaunchArm() {     
        pushDisk.set(0.0);  
    }
    public void returnLaunchArm(double speed) { 
        pushDisk.set(-speed);
    }
    public void turnLoaderWheels(double speed) {
        loadDisk.set(0.1); 
    }
    public void stopLoaderWheels() {     
        loadDisk.set(0.0);  
    }
}
